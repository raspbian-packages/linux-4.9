commit 49c6fa4516d533a3f38370ea64030dd39de2696d
Author: Michael S. Tsirkin <mst@redhat.com>
Date:   Mon Jan 23 21:37:52 2017 +0200

    virtio_net: fix PAGE_SIZE > 64k
    
    
    [ Upstream commit d0fa28f00052391b5df328f502fbbdd4444938b7 ]
    
    I don't have any guests with PAGE_SIZE > 64k but the
    code seems to be clearly broken in that case
    as PAGE_SIZE / MERGEABLE_BUFFER_ALIGN will need
    more than 8 bit and so the code in mergeable_ctx_to_buf_address
    does not give us the actual true size.
    
    Cc: John Fastabend <john.fastabend@gmail.com>
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/net/virtio_net.c b/drivers/net/virtio_net.c
index 7ca9989..1568aed 100644
--- a/drivers/net/virtio_net.c
+++ b/drivers/net/virtio_net.c
@@ -47,8 +47,16 @@ module_param(gso, bool, 0444);
  */
 DECLARE_EWMA(pkt_len, 1, 64)
 
+/* With mergeable buffers we align buffer address and use the low bits to
+ * encode its true size. Buffer size is up to 1 page so we need to align to
+ * square root of page size to ensure we reserve enough bits to encode the true
+ * size.
+ */
+#define MERGEABLE_BUFFER_MIN_ALIGN_SHIFT ((PAGE_SHIFT + 1) / 2)
+
 /* Minimum alignment for mergeable packet buffers. */
-#define MERGEABLE_BUFFER_ALIGN max(L1_CACHE_BYTES, 256)
+#define MERGEABLE_BUFFER_ALIGN max(L1_CACHE_BYTES, \
+				   1 << MERGEABLE_BUFFER_MIN_ALIGN_SHIFT)
 
 #define VIRTNET_DRIVER_VERSION "1.0.0"
 
