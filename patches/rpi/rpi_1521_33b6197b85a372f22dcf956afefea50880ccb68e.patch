commit 33b6197b85a372f22dcf956afefea50880ccb68e
Author: Luis R. Rodriguez <mcgrof@kernel.org>
Date:   Tue May 23 21:53:47 2017 -0400

    kernel/ucount.c: mark user_header with kmemleak_ignore()
    
    
    [ Upstream commit ed5bd7dc88edf4a4a9c67130742b1b59aa017a5f ]
    
    The user_header gets caught by kmemleak with the following splat as
    missing a free:
    
      unreferenced object 0xffff99667a733d80 (size 96):
      comm "swapper/0", pid 1, jiffies 4294892317 (age 62191.468s)
      hex dump (first 32 bytes):
        a0 b6 92 b4 ff ff ff ff 00 00 00 00 01 00 00 00  ................
        01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
      backtrace:
         kmemleak_alloc+0x4a/0xa0
         __kmalloc+0x144/0x260
         __register_sysctl_table+0x54/0x5e0
         register_sysctl+0x1b/0x20
         user_namespace_sysctl_init+0x17/0x34
         do_one_initcall+0x52/0x1a0
         kernel_init_freeable+0x173/0x200
         kernel_init+0xe/0x100
         ret_from_fork+0x2c/0x40
    
    The BUG_ON()s are intended to crash so no need to clean up after
    ourselves on error there.  This is also a kernel/ subsys_init() we don't
    need a respective exit call here as this is never modular, so just white
    list it.
    
    Link: http://lkml.kernel.org/r/20170203211404.31458-1-mcgrof@kernel.org
    Signed-off-by: Luis R. Rodriguez <mcgrof@kernel.org>
    Cc: Eric W. Biederman <ebiederm@xmission.com>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Nikolay Borisov <n.borisov.lkml@gmail.com>
    Cc: Serge Hallyn <serge@hallyn.com>
    Cc: Jan Kara <jack@suse.cz>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/kernel/ucount.c b/kernel/ucount.c
index f4ac185..c761cdb 100644
--- a/kernel/ucount.c
+++ b/kernel/ucount.c
@@ -231,11 +231,10 @@ static __init int user_namespace_sysctl_init(void)
 	 * properly.
 	 */
 	user_header = register_sysctl("user", empty);
+	kmemleak_ignore(user_header);
 	BUG_ON(!user_header);
 	BUG_ON(!setup_userns_sysctls(&init_user_ns));
 #endif
 	return 0;
 }
 subsys_initcall(user_namespace_sysctl_init);
-
-
