commit 35a7eb59837aad9182d432d2e3c64afe03ebb0fa
Author: Vineet Gupta <vgupta@synopsys.com>
Date:   Thu Jan 12 14:30:29 2017 -0800

    ARC: smp-boot: Decouple Non masters waiting API from jump to entry point
    
    
    [ Upstream commit bf02454a741b58682a82c314a9a46bed930ed2f7 ]
    
    For run-on-reset SMP configs, non master cores call a routine which
    waits until Master gives it a "go" signal (currently using a shared
    mem flag). The same routine then jumps off the well known entry point of
    all non Master cores i.e. @first_lines_of_secondary
    
    This patch moves out the last part into one single place in early boot
    code.
    
    This is better in terms of absraction (the wait API only waits) and
    returns, leaving out the "jump off to" part.
    
    In actual implementation this requires some restructuring of the early
    boot code as well as Master now jumps to BSS setup explicitly,
    vs. falling thru into it before.
    
    Technically this patch doesn't cause any functional change, it just
    moves the ugly #ifdef'ry from assembly code to "C"
    
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/arch/arc/kernel/head.S b/arch/arc/kernel/head.S
index 689dd86..8b90d25 100644
--- a/arch/arc/kernel/head.S
+++ b/arch/arc/kernel/head.S
@@ -71,14 +71,14 @@ ENTRY(stext)
 	GET_CPU_ID  r5
 	cmp	r5, 0
 	mov.nz	r0, r5
-#ifdef CONFIG_ARC_SMP_HALT_ON_RESET
-	; Non-Master can proceed as system would be booted sufficiently
-	jnz	first_lines_of_secondary
-#else
+	bz	.Lmaster_proceed
+
 	; Non-Masters wait for Master to boot enough and bring them up
-	jnz	arc_platform_smp_wait_to_boot
-#endif
-	; Master falls thru
+	; when they resume, tail-call to entry point
+	mov	blink, @first_lines_of_secondary
+	j	arc_platform_smp_wait_to_boot
+
+.Lmaster_proceed:
 #endif
 
 	; Clear BSS before updating any globals
diff --git a/arch/arc/kernel/smp.c b/arch/arc/kernel/smp.c
index 88674d9..44a0d21 100644
--- a/arch/arc/kernel/smp.c
+++ b/arch/arc/kernel/smp.c
@@ -98,14 +98,16 @@ static void arc_default_smp_cpu_kick(int cpu, unsigned long pc)
 
 void arc_platform_smp_wait_to_boot(int cpu)
 {
+	/* for halt-on-reset, we've waited already */
+	if (IS_ENABLED(CONFIG_ARC_SMP_HALT_ON_RESET))
+		return;
+
 	while (wake_flag != cpu)
 		;
 
 	wake_flag = 0;
-	__asm__ __volatile__("j @first_lines_of_secondary	\n");
 }
 
-
 const char *arc_platform_smp_cpuinfo(void)
 {
 	return plat_smp_ops.info ? : "";
