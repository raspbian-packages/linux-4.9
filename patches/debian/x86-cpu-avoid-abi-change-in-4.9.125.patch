From: Ben Hutchings <ben@decadent.org.uk>
Date: Mon, 10 Sep 2018 21:37:55 +0100
Subject: x86/cpu: Avoid ABI change in 4.9.125
Forwarded: not-needed

Commit ef3d45c95764 "x86/speculation/l1tf: Increase l1tf memory limit
for Nehalem+" added a new field to the end of cpuinfo_x86.  This
structure is always allocated statically in the core kernel, and not
embedded in anything larger, so extending it is safe.

Modules won't use the new field; make sure of that by guarding it
with #ifndef MODULE as well as hiding it from genksyms.

---
--- a/arch/x86/include/asm/processor.h
+++ b/arch/x86/include/asm/processor.h
@@ -136,8 +136,10 @@ struct cpuinfo_x86 {
 	/* Index into per_cpu list: */
 	u16			cpu_index;
 	u32			microcode;
+#if !defined(__GENKSYMS__) && !defined(MODULE)
 	/* Address space bits used by the cache internally */
 	u8			x86_cache_bits;
+#endif
 };
 
 #define X86_VENDOR_INTEL	0
@@ -175,10 +177,12 @@ extern const struct seq_operations cpuin
 
 extern void cpu_detect(struct cpuinfo_x86 *c);
 
+#ifndef MODULE
 static inline unsigned long long l1tf_pfn_limit(void)
 {
 	return BIT_ULL(boot_cpu_data.x86_cache_bits - 1 - PAGE_SHIFT);
 }
+#endif
 
 extern void early_cpu_init(void);
 extern void identify_boot_cpu(void);
