From: Ben Hutchings <ben@decadent.org.uk>
Date: Sun, 26 Aug 2018 22:47:27 +0100
Subject: net: Avoid ABI change in 4.9.115
Forwarded: not-needed

Commit 2d08921c8da2 "tcp: free batches of packets in tcp_prune_ofo_queue()"
moved sk_buff::pfmemalloc to a different place in the structure, so that
__copy_skb_header() wouldn't copy it.

To avoid an ABI change, move it back.  Change __copy_skb_header() to
save and restore pfmemalloc so that it it not overwritten.

---
--- a/include/linux/skbuff.h
+++ b/include/linux/skbuff.h
@@ -693,7 +693,7 @@ struct sk_buff {
 				peeked:1,
 				head_frag:1,
 				xmit_more:1,
-				pfmemalloc:1;
+				__unused:1; /* one bit hole */
 	kmemcheck_bitfield_end(flags1);
 
 	/* fields enclosed in headers_start/headers_end are copied
@@ -713,18 +713,19 @@ struct sk_buff {
 
 	__u8			__pkt_type_offset[0];
 	__u8			pkt_type:3;
+	__u8			pfmemalloc:1;
 	__u8			ignore_df:1;
 	__u8			nfctinfo:3;
-	__u8			nf_trace:1;
 
+	__u8			nf_trace:1;
 	__u8			ip_summed:2;
 	__u8			ooo_okay:1;
 	__u8			l4_hash:1;
 	__u8			sw_hash:1;
 	__u8			wifi_acked_valid:1;
 	__u8			wifi_acked:1;
-	__u8			no_fcs:1;
 
+	__u8			no_fcs:1;
 	/* Indicates the inner headers are valid in the skbuff. */
 	__u8			encapsulation:1;
 	__u8			encap_hdr_csum:1;
@@ -732,11 +733,11 @@ struct sk_buff {
 	__u8			csum_complete_sw:1;
 	__u8			csum_level:2;
 	__u8			csum_bad:1;
+
 #ifdef CONFIG_IPV6_NDISC_NODETYPE
 	__u8			ndisc_nodetype:2;
 #endif
 	__u8			ipvs_property:1;
-
 	__u8			inner_protocol_type:1;
 	__u8			remcsum_offload:1;
 #ifdef CONFIG_NET_SWITCHDEV
--- a/net/core/skbuff.c
+++ b/net/core/skbuff.c
@@ -834,6 +834,8 @@ EXPORT_SYMBOL(napi_consume_skb);
 
 static void __copy_skb_header(struct sk_buff *new, const struct sk_buff *old)
 {
+	bool pfmemalloc;
+
 	new->tstamp		= old->tstamp;
 	/* We do not copy old->sk */
 	new->dev		= old->dev;
@@ -849,6 +851,8 @@ static void __copy_skb_header(struct sk_
 	 */
 	new->queue_mapping = old->queue_mapping;
 
+	pfmemalloc = new->pfmemalloc;
+
 	memcpy(&new->headers_start, &old->headers_start,
 	       offsetof(struct sk_buff, headers_end) -
 	       offsetof(struct sk_buff, headers_start));
@@ -883,6 +887,7 @@ static void __copy_skb_header(struct sk_
 #endif
 #endif
 
+	new->pfmemalloc = pfmemalloc;
 }
 
 /*
