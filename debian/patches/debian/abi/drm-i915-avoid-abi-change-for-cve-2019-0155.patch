From: Ben Hutchings <ben@decadent.org.uk>
Date: Mon, 11 Nov 2019 12:10:14 +0000
Subject: drm/i915: Avoid ABI change for CVE-2019-0155
Forwarded: not-needed

Commit 3e977ac6179b "drm/i915: Prevent writing into a read-only object
via a GGTT mmap" adds a new member to struct drm_vma_offset_node, a
DRM core structure.  This structure is embedded in some other DRM
structures, and doesn't seem to have any padding, so adding an extra
member anywhere in it is an ABI change.

However, the vm_node member is a structure with many padding bits free
after some bitfields.  Since the new member is a single flag, we can
replace it with a 1-bit bitfield in that structure.  We still need to
hide this from genksyms.

---
--- a/drivers/gpu/drm/drm_gem.c
+++ b/drivers/gpu/drm/drm_gem.c
@@ -996,7 +996,7 @@ int drm_gem_mmap(struct file *filp, stru
 		return -EACCES;
 	}
 
-	if (node->readonly) {
+	if (node->vm_node.readonly) {
 		if (vma->vm_flags & VM_WRITE) {
 			drm_gem_object_unreference_unlocked(obj);
 			return -EINVAL;
--- a/drivers/gpu/drm/i915/i915_drv.h
+++ b/drivers/gpu/drm/i915/i915_drv.h
@@ -2350,13 +2350,13 @@ extern void drm_gem_object_unreference_u
 static inline void
 i915_gem_object_set_readonly(struct drm_i915_gem_object *obj)
 {
-	obj->base.vma_node.readonly = true;
+	obj->base.vma_node.vm_node.readonly = true;
 }
 
 static inline bool
 i915_gem_object_is_readonly(const struct drm_i915_gem_object *obj)
 {
-	return obj->base.vma_node.readonly;
+	return obj->base.vma_node.vm_node.readonly;
 }
 
 static inline bool
--- a/include/drm/drm_mm.h
+++ b/include/drm/drm_mm.h
@@ -69,6 +69,10 @@ struct drm_mm_node {
 	unsigned scanned_next_free : 1;
 	unsigned scanned_preceeds_hole : 1;
 	unsigned allocated : 1;
+#ifndef __GENKSYMS__
+	unsigned readonly : 1;	/* really for drm_vma_offset_node */
+	/* 25 bits spare */
+#endif
 	unsigned long color;
 	u64 start;
 	u64 size;
--- a/include/drm/drm_vma_manager.h
+++ b/include/drm/drm_vma_manager.h
@@ -42,7 +42,6 @@ struct drm_vma_offset_node {
 	rwlock_t vm_lock;
 	struct drm_mm_node vm_node;
 	struct rb_root vm_files;
-	bool readonly:1;
 };
 
 struct drm_vma_offset_manager {
