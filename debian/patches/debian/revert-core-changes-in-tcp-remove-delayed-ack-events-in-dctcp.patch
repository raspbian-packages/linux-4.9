From: Ben Hutchings <ben@decadent.org.uk>
Date: Sun, 26 Aug 2018 22:51:33 +0100
Subject: Revert core changes in "tcp: remove DELAYED ACK events in DCTCP"
Forwarded: not-needed

This reverts commit d4efb85f5f5a5eeba2a461b579bbe8b4af843f95, which
was commit a69258f7aa2623e0930212f09c586fd06674ad79 upstream, in the
core TCP code.  This caused an ABI change for all TCP congestiom
modules.
---
--- a/include/net/tcp.h
+++ b/include/net/tcp.h
@@ -850,6 +850,8 @@ enum tcp_ca_event {
 	CA_EVENT_LOSS,		/* loss timeout */
 	CA_EVENT_ECN_NO_CE,	/* ECT set, but not CE marked */
 	CA_EVENT_ECN_IS_CE,	/* received CE marked IP packet */
+	CA_EVENT_DELAYED_ACK,	/* Delayed ack is sent */
+	CA_EVENT_NON_DELAYED_ACK,
 };
 
 /* Information about inbound ACK, passed to cong_ops->in_ack_event() */
--- a/net/ipv4/tcp_output.c
+++ b/net/ipv4/tcp_output.c
@@ -3444,6 +3444,8 @@ void tcp_send_delayed_ack(struct sock *s
 	int ato = icsk->icsk_ack.ato;
 	unsigned long timeout;
 
+	tcp_ca_event(sk, CA_EVENT_DELAYED_ACK);
+
 	if (ato > TCP_DELACK_MIN) {
 		const struct tcp_sock *tp = tcp_sk(sk);
 		int max_ato = HZ / 2;
@@ -3500,6 +3502,8 @@ void __tcp_send_ack(struct sock *sk, u32
 	if (sk->sk_state == TCP_CLOSE)
 		return;
 
+	tcp_ca_event(sk, CA_EVENT_NON_DELAYED_ACK);
+
 	/* We are not putting this on the write queue, so
 	 * tcp_transmit_skb() will set the ownership to this
 	 * sock.
