commit 6cb6adcda91dae7af10fb25ab8ca73fcd31cdb4f
Author: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
Date:   Sat Jun 10 13:52:45 2017 +0300

    mac80211: don't send SMPS action frame in AP mode when not needed
    
    commit b3dd8279659f14f3624bb32559782d699fa6f7d1 upstream.
    
    mac80211 allows to modify the SMPS state of an AP both,
    when it is started, and after it has been started. Such a
    change will trigger an action frame to all the peers that
    are currently connected, and will be remembered so that
    new peers will get notified as soon as they connect (since
    the SMPS setting in the beacon may not be the right one).
    
    This means that we need to remember the SMPS state
    currently requested as well as the SMPS state that was
    configured initially (and advertised in the beacon).
    The former is bss->req_smps and the latter is
    sdata->smps_mode.
    
    Initially, the AP interface could only be started with
    SMPS_OFF, which means that sdata->smps_mode was SMPS_OFF
    always. Later, a nl80211 API was added to be able to start
    an AP with a different AP mode. That code forgot to update
    bss->req_smps and because of that, if the AP interface was
    started with SMPS_DYNAMIC, we had:
       sdata->smps_mode = SMPS_DYNAMIC
       bss->req_smps = SMPS_OFF
    
    That configuration made mac80211 think it needs to fire off
    an action frame to any new station connecting to the AP in
    order to let it know that the actual SMPS configuration is
    SMPS_OFF.
    
    Fix that by properly setting bss->req_smps in
    ieee80211_start_ap.
    
    Fixes: f69931748730 ("mac80211: set smps_mode according to ap params")
    Signed-off-by: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/net/mac80211/cfg.c b/net/mac80211/cfg.c
index fd6541f..07001b6 100644
--- a/net/mac80211/cfg.c
+++ b/net/mac80211/cfg.c
@@ -865,6 +865,8 @@ static int ieee80211_start_ap(struct wiphy *wiphy, struct net_device *dev,
 	default:
 		return -EINVAL;
 	}
+	sdata->u.ap.req_smps = sdata->smps_mode;
+
 	sdata->needed_rx_chains = sdata->local->rx_chains;
 
 	mutex_lock(&local->mtx);
