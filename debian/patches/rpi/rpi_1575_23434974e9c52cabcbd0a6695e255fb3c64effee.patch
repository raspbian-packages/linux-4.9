commit 23434974e9c52cabcbd0a6695e255fb3c64effee
Author: Xin Long <lucien.xin@gmail.com>
Date:   Tue Jan 24 14:05:16 2017 +0800

    sctp: sctp gso should set feature with NETIF_F_SG when calling skb_segment
    
    
    [ Upstream commit 5207f3996338e1db71363fe381c81aaf1e54e4e3 ]
    
    Now sctp gso puts segments into skb's frag_list, then processes these
    segments in skb_segment. But skb_segment handles them only when gs is
    enabled, as it's in the same branch with skb's frags.
    
    Although almost all the NICs support sg other than some old ones, but
    since commit 1e16aa3ddf86 ("net: gso: use feature flag argument in all
    protocol gso handlers"), features &= skb->dev->hw_enc_features, and
    xfrm_output_gso call skb_segment with features = 0, which means sctp
    gso would call skb_segment with sg = 0, and skb_segment would not work
    as expected.
    
    This patch is to fix it by setting features param with NETIF_F_SG when
    calling skb_segment so that it can go the right branch to process the
    skb's frag_list.
    
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/net/sctp/offload.c b/net/sctp/offload.c
index 7e869d0..4f5a2b5 100644
--- a/net/sctp/offload.c
+++ b/net/sctp/offload.c
@@ -68,7 +68,7 @@ static struct sk_buff *sctp_gso_segment(struct sk_buff *skb,
 		goto out;
 	}
 
-	segs = skb_segment(skb, features | NETIF_F_HW_CSUM);
+	segs = skb_segment(skb, features | NETIF_F_HW_CSUM | NETIF_F_SG);
 	if (IS_ERR(segs))
 		goto out;
 
