commit f0e77b5da0efbc80dbca46b129c2ae09d16765f6
Author: Thomas Falcon <tlfalcon@linux.vnet.ibm.com>
Date:   Tue May 23 21:53:27 2017 -0400

    ibmvnic: Fix endian error when requesting device capabilities
    
    
    [ Upstream commit 28f4d16570dcf440e54a4d72666d5be452f27d0e ]
    
    When a vNIC client driver requests a faulty device setting, the
    server returns an acceptable value for the client to request.
    This 64 bit value was incorrectly being swapped as a 32 bit value,
    resulting in loss of data. This patch corrects that by using
    the 64 bit swap function.
    
    Signed-off-by: Thomas Falcon <tlfalcon@linux.vnet.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/net/ethernet/ibm/ibmvnic.c b/drivers/net/ethernet/ibm/ibmvnic.c
index 207cc56..d1cf37d 100644
--- a/drivers/net/ethernet/ibm/ibmvnic.c
+++ b/drivers/net/ethernet/ibm/ibmvnic.c
@@ -2400,10 +2400,10 @@ static void handle_request_cap_rsp(union ibmvnic_crq *crq,
 	case PARTIALSUCCESS:
 		dev_info(dev, "req=%lld, rsp=%ld in %s queue, retrying.\n",
 			 *req_value,
-			 (long int)be32_to_cpu(crq->request_capability_rsp.
+			 (long int)be64_to_cpu(crq->request_capability_rsp.
 					       number), name);
 		release_sub_crqs_no_irqs(adapter);
-		*req_value = be32_to_cpu(crq->request_capability_rsp.number);
+		*req_value = be64_to_cpu(crq->request_capability_rsp.number);
 		init_sub_crqs(adapter, 1);
 		return;
 	default:
