commit 6e8e900f98e67c47f0cd18bf928f70aa0bbe7194
Author: Joerg Roedel <jroedel@suse.de>
Date:   Thu Apr 6 16:19:22 2017 +0200

    x86/mpx: Correctly report do_mpx_bt_fault() failures to user-space
    
    commit 5ed386ec09a5d75bcf073967e55e895c2607a5c3 upstream.
    
    When this function fails it just sends a SIGSEGV signal to
    user-space using force_sig(). This signal is missing
    essential information about the cause, e.g. the trap_nr or
    an error code.
    
    Fix this by propagating the error to the only caller of
    mpx_handle_bd_fault(), do_bounds(), which sends the correct
    SIGSEGV signal to the process.
    
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Fixes: fe3d197f84319 ('x86, mpx: On-demand kernel allocation of bounds tables')
    Link: http://lkml.kernel.org/r/1491488362-27198-1-git-send-email-joro@8bytes.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/arch/x86/mm/mpx.c b/arch/x86/mm/mpx.c
index 3e7c489..a75103e 100644
--- a/arch/x86/mm/mpx.c
+++ b/arch/x86/mm/mpx.c
@@ -525,15 +525,7 @@ int mpx_handle_bd_fault(void)
 	if (!kernel_managing_mpx_tables(current->mm))
 		return -EINVAL;
 
-	if (do_mpx_bt_fault()) {
-		force_sig(SIGSEGV, current);
-		/*
-		 * The force_sig() is essentially "handling" this
-		 * exception, so we do not pass up the error
-		 * from do_mpx_bt_fault().
-		 */
-	}
-	return 0;
+	return do_mpx_bt_fault();
 }
 
 /*
