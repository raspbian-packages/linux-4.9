commit 599bfbe85e7f34b1cfbd1c0b7132d426829d7710
Author: Marcus Huewe <suse-tux@gmx.de>
Date:   Tue May 23 21:53:49 2017 -0400

    ipv6: addrconf: fix generation of new temporary addresses
    
    
    [ Upstream commit a11a7f71cac209c7c9cca66eb506e1ebb033a3b3 ]
    
    Under some circumstances it is possible that no new temporary addresses
    will be generated.
    
    For instance, addrconf_prefix_rcv_add_addr() indirectly calls
    ipv6_create_tempaddr(), which creates a tentative temporary address and
    starts dad. Next, addrconf_prefix_rcv_add_addr() indirectly calls
    addrconf_verify_rtnl(). Now, assume that the previously created temporary
    address has the least preferred lifetime among all existing addresses and
    is still tentative (that is, dad is still running). Hence, the next run of
    addrconf_verify_rtnl() is performed when the preferred lifetime of the
    temporary address ends. If dad succeeds before the next run, the temporary
    address becomes deprecated during the next run, but no new temporary
    address is generated.
    
    In order to fix this, schedule the next addrconf_verify_rtnl() run slightly
    before the temporary address becomes deprecated, if dad succeeded.
    
    Signed-off-by: Marcus Huewe <suse-tux@gmx.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/net/ipv6/addrconf.c b/net/ipv6/addrconf.c
index f088a1d..9ed836a 100644
--- a/net/ipv6/addrconf.c
+++ b/net/ipv6/addrconf.c
@@ -4004,6 +4004,12 @@ static void addrconf_dad_completed(struct inet6_ifaddr *ifp, bool bump_id)
 
 	if (bump_id)
 		rt_genid_bump_ipv6(dev_net(dev));
+
+	/* Make sure that a new temporary address will be created
+	 * before this temporary address becomes deprecated.
+	 */
+	if (ifp->flags & IFA_F_TEMPORARY)
+		addrconf_verify_rtnl();
 }
 
 static void addrconf_dad_run(struct inet6_dev *idev)
