commit ca8c60e9059275d9fb31d59ada78ab8c76ffba18
Author: Frederic Barrat <fbarrat@linux.vnet.ibm.com>
Date:   Tue Jun 6 11:43:41 2017 +0200

    cxl: Fix error path on bad ioctl
    
    commit cec422c11caeeccae709e9942058b6b644ce434c upstream.
    
    Fix error path if we can't copy user structure on CXL_IOCTL_START_WORK
    ioctl. We shouldn't unlock the context status mutex as it was not
    locked (yet).
    
    Fixes: 0712dc7e73e5 ("cxl: Fix issues when unmapping contexts")
    Signed-off-by: Frederic Barrat <fbarrat@linux.vnet.ibm.com>
    Reviewed-by: Vaibhav Jain <vaibhav@linux.vnet.ibm.com>
    Reviewed-by: Andrew Donnellan <andrew.donnellan@au1.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/misc/cxl/file.c b/drivers/misc/cxl/file.c
index 77080cc..afa2113 100644
--- a/drivers/misc/cxl/file.c
+++ b/drivers/misc/cxl/file.c
@@ -155,11 +155,8 @@ static long afu_ioctl_start_work(struct cxl_context *ctx,
 
 	/* Do this outside the status_mutex to avoid a circular dependency with
 	 * the locking in cxl_mmap_fault() */
-	if (copy_from_user(&work, uwork,
-			   sizeof(struct cxl_ioctl_start_work))) {
-		rc = -EFAULT;
-		goto out;
-	}
+	if (copy_from_user(&work, uwork, sizeof(work)))
+		return -EFAULT;
 
 	mutex_lock(&ctx->status_mutex);
 	if (ctx->status != OPENED) {
